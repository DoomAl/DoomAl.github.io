{"version":3,"sources":["modules/Activity/index.tsx","hooks/useMockData.ts","modules/Checkout/index.tsx","modules/HighCare/index.tsx","modules/Inventory/index.tsx","App.tsx","index.tsx"],"names":["schema","yup","shape","activities","min","Activity","_ref","_errors$activities","state","setState","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","data","id","title","sectorName","navigate","useNavigate","sectors","_toConsumableArray","Set","map","_ref2","isChecked","find","activity","_jsxs","onSubmit","formData","checked","filter","_ref3","includes","_objectSpread","children","_jsx","className","_ref4","type","name","value","ref","defaultChecked","message","Checkout","_","_Fragment","src","width","height","frameBorder","allowFullScreen","onClick","HighCare","inventory","max","maxECommerceInventory","maxITInventory","Inventory","_errors$inventory","_useState","useState","_useState2","_slicedToArray","isHighCare","setIsHighCare","watch","inventoryValue","useEffect","moreThan4Activities","length","isECommerceSector","isITSector","maxInventory","Number","defaultValue","placeholder","App","undefined","Location","location","Router","basepath","path","default","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.37c86865.chunk.js","sourcesContent":["import { RouteComponentProps, useNavigate } from \"@reach/router\";\nimport { State } from \"../../App\";\nimport { useActivities } from \"../../hooks/useMockData\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as yup from \"yup\";\n\ntype Props = {\n  state: State;\n  setState: React.Dispatch<React.SetStateAction<State>>;\n} & RouteComponentProps;\n\nconst schema = yup.object().shape({\n  activities: yup.array().min(1, \"No activity can lead to health problems\")\n});\n\nexport default function Activity({ state, setState }: Props): JSX.Element {\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const data = useActivities();\n  const navigate = useNavigate();\n  const sectors = [...new Set(data.map(({ sectorName }) => sectorName))];\n\n  const isChecked = (id: string): boolean => {\n    return !!state.activities.find((activity) => activity.id === id);\n  };\n\n  const onSubmit = (formData: { activities: string[] }): void => {\n    const checked = data.filter(({ id }) => {\n      return formData.activities.includes(id);\n    });\n    setState({ ...state, activities: checked });\n    navigate(\"/inventory\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <h1>Which activities do you want to insure?</h1>\n      <h2>Select the activities of your company.</h2>\n      <div className=\"wrapper\">\n        {sectors.map((sectorName) => (\n          <div className=\"sectorWrapper\" key={sectorName}>\n            <h3>{sectorName}</h3>\n            {data\n              .filter((activity) => activity.sectorName === sectorName)\n              .map(({ id, title }) => (\n                <label className=\"checkbox\" key={id}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"activities\"\n                    value={id}\n                    ref={register}\n                    defaultChecked={isChecked(id)}\n                  />\n                  {title}\n                </label>\n              ))}\n          </div>\n        ))}\n        {errors?.activities && (\n          <div className=\"error-message\">{errors?.activities?.message}</div>\n        )}\n        <button type=\"submit\">Next page</button>\n      </div>\n    </form>\n  );\n}\n","import { Activity } from \"../model/activity\";\n\nexport const useActivities = (): Activity[] => {\n  return [\n    {\n      id: \"0\",\n      title: \"Kayak webshop\",\n      sectorName: \"e-commerce\"\n    },\n    {\n      id: \"1\",\n      title: \"Electronics webshop\",\n      sectorName: \"e-commerce\"\n    },\n    {\n      id: \"2\",\n      title: \"Flowers webshop\",\n      sectorName: \"e-commerce\"\n    },\n    {\n      id: \"3\",\n      title: \"Software development\",\n      sectorName: \"IT\"\n    },\n    {\n      id: \"4\",\n      title: \"UX design\",\n      sectorName: \"IT\"\n    },\n    {\n      id: \"5\",\n      title: \"IT consultancy\",\n      sectorName: \"IT\"\n    }\n  ];\n};\n","import { RouteComponentProps, useNavigate } from \"@reach/router\";\n\nexport default function Checkout(_: RouteComponentProps): JSX.Element {\n  const navigate = useNavigate();\n\n  const goBack = (): void => {\n    navigate(\"/inventory\");\n  };\n\n  return (\n    <>\n      <h1>Hurray! This is Checkout page!</h1>\n      <div className=\"wrapper\">\n        <iframe\n          title=\"Checkout kitty\"\n          src=\"https://giphy.com/embed/aNqEFrYVnsS52\"\n          width=\"480\"\n          height=\"270\"\n          frameBorder=\"0\"\n          className=\"giphy-embed\"\n          allowFullScreen\n        ></iframe>\n        <button type=\"button\" onClick={goBack}>\n          Go back\n        </button>\n      </div>\n    </>\n  );\n}\n","import { RouteComponentProps, useNavigate } from \"@reach/router\";\n\nexport default function HighCare(_: RouteComponentProps): JSX.Element {\n  const navigate = useNavigate();\n\n  const goBack = (): void => {\n    navigate(\"/inventory\");\n  };\n\n  return (\n    <>\n      <h1>This is HighCare page!</h1>\n      <div className=\"wrapper\">\n        <iframe\n          title=\"HighCare kitty\"\n          src=\"https://giphy.com/embed/VbnUQpnihPSIgIXuZv\"\n          width=\"384\"\n          height=\"480\"\n          frameBorder=\"0\"\n          className=\"giphy-embed\"\n          allowFullScreen\n        ></iframe>\n        <button type=\"button\" onClick={goBack}>\n          Go back\n        </button>\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { RouteComponentProps, useNavigate } from \"@reach/router\";\nimport { State } from \"../../App\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as yup from \"yup\";\n\ntype Props = {\n  state: State;\n  setState: React.Dispatch<React.SetStateAction<State>>;\n} & RouteComponentProps;\n\nconst schema = yup.object().shape({\n  inventory: yup\n    .number()\n    .min(1000, \"You need to have more stuff to run your business\")\n    .max(10000000, \"Whoah, Scrooge McDuck\")\n});\n\nconst maxECommerceInventory = 2000000;\nconst maxITInventory = 500000;\n\nexport default function Inventory({ state, setState }: Props): JSX.Element {\n  const [isHighCare, setIsHighCare] = useState<boolean>(false);\n  const { register, handleSubmit, watch, errors } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const navigate = useNavigate();\n  const inventoryValue = watch(\"inventory\");\n\n  const onSubmit = (formData: { inventory: string }): void => {\n    setState({ ...state, inventory: formData.inventory });\n    if (isHighCare) {\n      navigate(\"/highcare\");\n    } else {\n      navigate(\"/checkout\");\n    }\n  };\n\n  const goBack = (): void => {\n    navigate(\"/activity\");\n  };\n\n  useEffect(() => {\n    const moreThan4Activities = state.activities.length > 4;\n    const isECommerceSector = state.activities.find(\n      ({ sectorName }) => sectorName === \"e-commerce\"\n    );\n    const isITSector = state.activities.find(\n      ({ sectorName }) => sectorName === \"IT\"\n    );\n\n    let maxInventory = maxECommerceInventory;\n\n    if (isITSector) {\n      maxInventory = maxITInventory;\n    }\n    if (isECommerceSector && isITSector) {\n      maxInventory = maxECommerceInventory + maxITInventory;\n    }\n    setIsHighCare(moreThan4Activities || Number(inventoryValue) > maxInventory);\n  }, [state, inventoryValue]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1>Inventory and goods</h1>\n        <h2>Enter estimated value of your inventory</h2>\n        <div className=\"wrapper\">\n          <div className=\"input-wrapper\">\n            <label>Total value of goods</label>\n            <input\n              type=\"number\"\n              name=\"inventory\"\n              ref={register}\n              defaultValue={state.inventory}\n              placeholder=\"0\"\n            />\n          </div>\n          {errors?.inventory && (\n            <div className=\"error-message\">{errors?.inventory?.message}</div>\n          )}\n          <button type=\"button\" onClick={goBack}>\n            Go back\n          </button>\n          <button type=\"submit\">Next page</button>\n        </div>\n      </form>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { Location, Router } from \"@reach/router\";\nimport Activity from \"./modules/Activity\";\nimport Checkout from \"./modules/Checkout\";\nimport HighCare from \"./modules/HighCare\";\nimport Inventory from \"./modules/Inventory\";\nimport { Activity as IActivity } from \"./model/activity\";\nimport \"./styles.css\";\n\nexport type State = {\n  activities: IActivity[];\n  inventory: string | undefined;\n};\n\nexport default function App(): JSX.Element {\n  const [state, setState] = useState<State>({\n    activities: [],\n    inventory: undefined\n  });\n  return (\n    <div className=\"App\">\n      <Location>\n        {({ location }): JSX.Element => (\n          <Router location={location} basepath={\"/\"}>\n            <Activity\n              path=\"/activity\"\n              state={state}\n              setState={setState}\n              default\n            />\n            <Inventory path=\"/inventory\" state={state} setState={setState} />\n            <Checkout path=\"/checkout\" />\n            <HighCare path=\"/highcare\" />\n          </Router>\n        )}\n      </Location>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}